@model TextEditor.Models.Doc
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager;

@{
    ViewData["Title"] = "Create";
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <input asp-for="Title" class="form-control" value="Untitled Document" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <textarea id="tiny" style="width: 60vw; height: 88vh" asp-for="Content"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="form-group">
                    <input type="hidden" asp-for="Content" class="form-control" value="@userManager.GetUserId(User)" />
                </div>
            }
            else
            {
                <p class="text-danger">User not authenticated!</p>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

            @if (Model != null && Model.Id != null)
            {
                <div class="form-group">
                    <a class="btn btn-danger m-2" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                </div>
            }
            else
            {
                <p class="text-muted">Cannot delete: Model is null or not initialized.</p>
            }
        </form>
    </div>
</div>

<div>
    <a class="btn btn-info mt-3" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
